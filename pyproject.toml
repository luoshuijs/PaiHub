[project]
name = "paihub"
version = "0.1.0"
description = "PaiHub"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "async-lru>=2.0.4",
    "async-pixiv>=1.1.2",
    "asyncmy>=0.2.10",
    "curl-cffi>=0.10.0",
    "httpx>=0.28.0",
    "motor>=3.6.0",
    "orjson>=3.10.7",
    "persica",
    "picimagesearch",
    "pybooru>=4.2.2",
    "pydantic-settings>=2.7.0",
    "python-dotenv>=1.0.1",
    "python-telegram-bot[ext,rate-limiter]>=21.9",
    "redis>=5.2.1",
    "rich>=13.9.4",
    "sqlmodel>=0.0.22",
    "toml>=0.10.2",
    "uvloop>=0.21.0 ; sys_platform == 'linux'",
    "watchfiles>=1.0.3",
]

[project.optional-dependencies]
playwright = [
    "playwright>=1.47.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.black]
include = '\.pyi?$'
line-length = 120
target-version = ['py312']

[tool.uv]
dev-dependencies = [
    "black>=24.8.0",
    "ruff>=0.6.4",
]

[tool.uv.sources]
picimagesearch = { git = "https://github.com/kitUIN/PicImageSearch" }
async-pixiv = { git = "https://github.com/ArkoClub/async-pixiv", branch = "fix" }
persica = { git = "https://github.com/luoshuijs/Persica"}

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "PL", # pylint
    "UP",  # pyupgrade
    "PERF", # Perflint
    "FLY", # flynt
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "RSE", # flake8-raise
    "G", # flake8-logging-format
    "ISC", # flake8-implicit-str-concat
    "PT", # flake8-pytest-style
    "ASYNC", # flake8-async
    "TCH", # flake8-type-checking
    "SLOT", # flake8-slots-slot
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "INP", # flake8-no-pep420
    "YTT", # flake8-2020
    # "DTZ", # flake8-datetimez
    "ARG", # flake8-unused-arguments
    "S", # flake8-bandit
    "ARG" , # flake8-print
    "FURB", # refurb
    "AIR", # Airflow
    "TRY", # tryceratops
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191", # indentation contains tabs
    "PLR0912", # Too many branches
    "PLR0911", # Too many return statements
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "TRY003", # Avoid specifying long messages outside the exception class
    "TRY400", #  Use logging.exception instead of logging.xxxx
    "PLR2004", #  Checks for the use of unnamed numerical constants ("magic") values in comparisons.
    "ISC001", #  The following rule may cause conflicts when used with the formatter: ISC001
]
[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["B018"] # Found useless expression. Either assign it to a variable or remove it.
"tests/**.py" = [
    "ASYNC230", # Async functions should not open files with blocking methods like open
    "DTZ",
    "ARG",
    "ASYNC109", # Async function definition with a timeout parameter
    "D",
    "S",
    "TRY"
]
